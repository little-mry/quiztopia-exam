org: javascript24
service: quiztopia-exam

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-north-1
  environment:
    QUIZ_TABLE: quiztopia-table
    JWT_SECRET: supersecretkey
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:BatchGetItem
        - dynamodb:Query
        - dynamodb:DeleteItem
        - dynamodb:TransactWriteItems
        - dynamodb:UpdateItem
        - dynamodb:DescribeTable
      Resource:
        - arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/quiztopia-table
        - arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/quiztopia-table/index/*
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource:
        - arn:aws:lambda:eu-north-1:*:function:quiztopia-exam-*
    - Effect: Allow
      Action:
        - logs:CreateLogStream
        - logs:PutLogEvents
      Resource:
        - arn:aws:logs:eu-north-1:*:log-group:/aws/lambda/*:*
    - Effect: Allow
      Action:
        - logs:CreateLogGroup
      Resource:
        - "*"

build:
  esbuild:
    bundle: true
    minify: true
    sourcemap: true
    buildConcurrency: 10

package:
  individually: true

functions:
  signupUser:
    handler: src/functions/auth/signupUser/index.handler
    events:
      - httpApi:
          path: /auth/signup
          method: post
  loginUser:
    handler: src/functions/auth/loginUser/index.handler
    events:
      - httpApi:
          path: /auth/login
          method: post
  getAllQuizzes:
    handler: src/functions/getAllQuizzes/index.handler
    events:
      - httpApi:
          path: /quiz
          method: get
  postNewQuiz:
    handler: src/functions/postNewQuiz/index.handler
    events:
      - httpApi:
          path: /quiz
          method: post
  postNewQuestion:
    handler: src/functions/postNewQuestion/index.handler
    events:
      - httpApi:
          path: /quiz/question
          method: post
  getQuizById:
    handler: src/functions/getQuizById/index.handler
    events:
      - httpApi:
          path: /quiz/{userId}/{quizId}
          method: get
  deleteQuizById:
    handler: src/functions/deleteQuizById/index.handler
    events:
      - httpApi:
          path: /quiz/{userId}/{quizId}
          method: delete
  updateQuizById:
    handler: src/functions/updateQuizById/index.handler
    events:
      - httpApi:
          path: /quiz/{userId}/{quizId}
          method: put

resources:
  Resources:
    QuiztopiaTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: quiztopia-table
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
          # GSI for all quizzes
          - AttributeName: GSI_ALL_pk
            AttributeType: S
          - AttributeName: GSI_ALL_sk
            AttributeType: S
          # GSI for leaderboard
          - AttributeName: GSI_LEAD_pk
            AttributeType: S
          - AttributeName: GSI_LEAD_sk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: GSI_ALL_QUIZZES
            KeySchema:
              - AttributeName: GSI_ALL_pk
                KeyType: HASH
              - AttributeName: GSI_ALL_sk
                KeyType: RANGE
            Projection:
              ProjectionType: ALL  # (kan sn√§vas med KEYS_ONLY/INCLUDE om du vill)
          - IndexName: GSI_LEADERBOARD
            KeySchema:
              - AttributeName: GSI_LEAD_pk
                KeyType: HASH
              - AttributeName: GSI_LEAD_sk
                KeyType: RANGE
            Projection:
              ProjectionType: ALL 
           
        BillingMode: PAY_PER_REQUEST
